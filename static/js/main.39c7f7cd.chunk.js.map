{"version":3,"sources":["components/NavigationList/NavigationList.tsx","components/FilteredItems/FilteredItems.tsx","components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["NavigationList","length","currentPage","onPageChange","Array","from","_","i","map","item","className","cn","active","href","onClick","FilteredItems","perPage","total","sort","a","b","maxValue","Pagination","navListLength","Math","ceil","isLeftButtonAvailable","isRightButtonAvailable","disabled","items","to","numbers","n","push","getNumbers","App","useState","setCurrentPage","itemsPerPage","setItemsPerPage","maxItem","Number","minValue","id","value","onChange","event","target","htmlFor","pageId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39c7f7cd.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  length: number;\n  currentPage: number;\n  onPageChange: (item: number) => void;\n};\n\nexport const NavigationList: React.FC<Props> = ({\n  length,\n  currentPage,\n  onPageChange,\n}) => {\n  return (\n    <>\n      {\n        Array.from(\n          { length },\n          (_, i) => i + 1,\n        )\n          .map(item => (\n            <li\n              key={item}\n              className={cn(\n                'page-item',\n                { active: item === currentPage },\n              )}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${item}`}\n                onClick={() => onPageChange(item)}\n              >\n                {item}\n              </a>\n            </li>\n          ))\n      }\n    </>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  perPage: number,\n  currentPage: number;\n  total: number;\n}\n\nexport const FilteredItems : React.FC<Props> = ({\n  perPage,\n  currentPage,\n  total,\n}) => {\n  return (\n    <ul>\n      {Array.from(\n        { length: perPage },\n        (_, i) => i,\n      )\n        .sort((a, b) => b - a)\n        .map(item => {\n          const maxValue = perPage * currentPage;\n\n          if (maxValue - item > total) {\n            return null;\n          }\n\n          return (\n            <li\n              key={item}\n              data-cy=\"item\"\n            >\n              {`Item ${maxValue - item}`}\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { NavigationList } from '../NavigationList/NavigationList';\nimport { FilteredItems } from '../FilteredItems/FilteredItems';\n\ninterface Props {\n  total: number;\n  perPage: number\n  currentPage: number\n  onPageChange: (pageId: number) => void;\n}\n\nexport const Pagination: FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const navListLength = Math.ceil(total / perPage);\n  const isLeftButtonAvailable = currentPage <= 1;\n  const isRightButtonAvailable = currentPage >= navListLength;\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn(\n          'page-item',\n          { disabled: isLeftButtonAvailable },\n        )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={isLeftButtonAvailable}\n            onClick={() => {\n              if (currentPage > 1) {\n                onPageChange(currentPage - 1);\n              }\n            }}\n          >\n            «\n          </a>\n        </li>\n        <NavigationList\n          length={navListLength}\n          currentPage={currentPage}\n          onPageChange={onPageChange}\n        />\n        <li className={cn(\n          'page-item',\n          { disabled: isRightButtonAvailable },\n        )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={isRightButtonAvailable}\n            onClick={() => {\n              if (currentPage < navListLength) {\n                onPageChange(currentPage + 1);\n              }\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <FilteredItems\n        perPage={perPage}\n        currentPage={currentPage}\n        total={total}\n      />\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const defaultPage = 1;\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const maxItem = Number(itemsPerPage) * currentPage < items.length\n    ? Number(itemsPerPage) * currentPage\n    : items.length;\n\n  const itemsInColumn = maxItem - ((currentPage - 1) * +itemsPerPage);\n  const minValue = maxItem - itemsInColumn;\n\n  const handlePage = (pageId: number) => {\n    setCurrentPage(pageId);\n  };\n\n  const handlePerPage = (value: number) => {\n    setItemsPerPage(value);\n\n    setCurrentPage(defaultPage);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${minValue + 1} - ${maxItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={(event) => handlePerPage(+event.target.value)}\n          >\n            <option value={3}>3</option>\n            <option value={5}>5</option>\n            <option value={10}>10</option>\n            <option value={20}>20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={handlePage}\n      />\n    </div>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}